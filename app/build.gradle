/*
 * Copyright 2014-2019 Julien Guerinet
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Release Signing Config Properties (not necessary)
def fileName = "MyMartlet.properties"
def releaseProps = null
if (project.hasProperty(fileName)) {
    def releasePropertiesFile = file(project.property(fileName))
    if (releasePropertiesFile.canRead()) {
        releaseProps = new Properties()
        releaseProps.load(new FileInputStream(releasePropertiesFile))
    }
}

// Private Properties (not necessary)
fileName = "MyMartlet-Private.properties"
def privateProps = null
if (project.hasProperty(fileName)) {
    def privatePropertiesFile = file(project.property(fileName))
    if (privatePropertiesFile.canRead()) {
        privateProps = new Properties()
        privateProps.load(new FileInputStream(releasePropertiesFile))
    }
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 4
def versionBuild = 4

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}
android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.guerinet.mymartlet"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode versionMajor * 10000000 + versionMinor * 100000 + versionPatch * 1000 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "int", "BUILD_NUMBER", "$versionBuild"
    }

    signingConfigs {
        debug {
            storeFile file('../util/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            if (releaseProps != null) {
                storeFile file(releaseProps.storeFile)
                storePassword releaseProps.storePassword
                keyAlias releaseProps.keyAlias
                keyPassword releaseProps.keyPassword
            }
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix ".${versionBuild}"
        }

        dev {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix ".${versionBuild}"
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError true
        warning 'MissingTranslation'
    }
}

// Set the Facebook/Twitter keys from the private properties file (null if not defined)
android.buildTypes.each { type ->
    type.buildConfigField 'String', 'TWITTER_KEY', privateProps?.twitterKey ?: '"TWITTER_KEY"'
    type.buildConfigField 'String', 'TWITTER_SECRET', privateProps?.twitterSecret ?: '"TWITTER_SECRET"'
    def facebookAppId = privateProps?.facebookAppId ?: '"FACEBOOK_ID"'
    type.resValue 'string', 'facebook_app_id', facebookAppId
    type.resValue 'string', 'facebook_provider', 'com.facebook.app.FacebookContentProvider' + facebookAppId
}

// Versions for libraries with multiple dependencies
def anko_version='0.10.8'
def koin_version = "1.0.2"
def okhttp_version = "3.13.1"
def retrofit_version = "2.4.0"
def room_version = "2.0.0"
def suitcase_version = "5.0.1"

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.fragment:fragment-ktx:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    kapt "androidx.lifecycle:lifecycle-compiler:$room_version"
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation "androidx.room:room-runtime:$room_version"
    kapt 'androidx.room:room-compiler:2.0.0'
    implementation "com.afollestad.material-dialogs:core:2.0.0"
    implementation("com.crashlytics.sdk.android:crashlytics:2.9.9@aar") {
        transitive = true
    }
    implementation "com.facebook.android:facebook-android-sdk:4.38.0"
    implementation "com.google.android.gms:play-services-analytics:16.0.7"
    implementation "com.google.android.gms:play-services-maps:16.1.0"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation 'com.google.firebase:firebase-firestore:18.0.0'
    implementation "com.guerinet:morf:6.0.0"
    implementation "com.guerinet.suitcase:analytics:$suitcase_version"
    implementation "com.guerinet.suitcase:coroutines:$suitcase_version"
    implementation "com.guerinet.suitcase:date:$suitcase_version"
    implementation "com.guerinet.suitcase:dialog:$suitcase_version"
    implementation "com.guerinet.suitcase:firebase-analytics:$suitcase_version"
    implementation "com.guerinet.suitcase:io:$suitcase_version"
    implementation "com.guerinet.suitcase:lifecycle:$suitcase_version"
    implementation "com.guerinet.suitcase:log:$suitcase_version"
    implementation "com.guerinet.suitcase:prefs:$suitcase_version"
    implementation "com.guerinet.suitcase:room:$suitcase_version"
    implementation "com.guerinet.suitcase:ui:$suitcase_version"
    implementation "com.guerinet.suitcase:util:$suitcase_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation "com.jakewharton.threetenabp:threetenabp:1.1.1"
    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation "com.orhanobut:hawk:2.0.1"
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okio:okio:2.2.2"
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation("com.twitter.sdk.android:twitter:3.3.0@aar") {
        transitive = true
    }
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.0"
    // Don't update this as 1.10.x breaks the converters
    implementation "org.jsoup:jsoup:1.9.1"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
}

apply from: "https://raw.githubusercontent.com/jguerinet/Gradle-Scripts/master/android-increment-build.gradle"

apply plugin: 'com.google.gms.google-services'
